@page "/"
@using QRCoder.Core
@using PI_Booking.Models

<PageTitle>Home</PageTitle>

@* <div class="alert alert-warning" role="alert"> *@
@*     Before authentication will function correctly, you must configure your provider details in <code>Program.cs</code> *@
@* </div> *@

@if (_bookings.Count > 0)
{
    <table class="table-responsive-lg">
        <thead>
        <tr>
            <td>Reference</td>
            <td>Check In</td>
            <td>Check Out</td>
        </tr>
        </thead>
        <tbody>
        @foreach (var booking in _bookings)
        {
            <tr>
                <td>@booking.Reference</td>
                <td>@booking.StartDate.ToShortDateString()</td>
                <td>@booking.EndDate.ToShortDateString()</td>
            </tr>
        }
        </tbody>
    </table>
}
<div class="input-group">
    <div class="col-sm-6">
        <label class="mb-3">QR Code Text</label>
        <input type="text" @bind-value="QrCodeText" placeholder="Enter your text" class="form-control mb-4" />
        <button @onclick="GenerateQrCode" class="btn btn-success">Generate QR Code</button>
    </div>
</div>


<img alt ="" src="@_qrByte" width="300" class="mb-5" />

@code {
    private string? QrCodeText { get; set; }
    private string _qrByte = "";
    private List<Booking> _bookings = new List<Booking>();

    protected override void OnInitialized()
    {
        _bookings.Add( new Booking() { Reference = "BAF0145566", StartDate = DateTime.Parse("15/01/2025")});
        _bookings.Add( new Booking() { Reference = "BAF6479195", StartDate = DateTime.Parse("22/01/2025")});
        _bookings.Add( new Booking() { Reference = "BAF4241388", StartDate = DateTime.Parse("29/01/2025")});
        QrCodeText = "BAF0145566:Karanika.png";
        base.OnInitialized();
    }

    private void GenerateQrCode()
    {
        if (!string.IsNullOrEmpty(QrCodeText))
        {
            using (QRCodeGenerator qrGenerator = new QRCodeGenerator())
            using (QRCodeData qrCodeData = qrGenerator.CreateQrCode(QrCodeText, QRCodeGenerator.ECCLevel.Q))
            using (QRCode qrCode = new QRCode(qrCodeData))
            {
                PngByteQRCode pngByteQrCode = new PngByteQRCode(qrCodeData);
                var base64EncodedQrCode = Convert.ToBase64String(pngByteQrCode.GetGraphic(10));
                _qrByte = $"data:image/png;base64,{base64EncodedQrCode}";
            }
            
        }
    }
}